#########
# PROJECT
#########

# Certain tasks may operate in a less secure (but more convenient) manner, eg.
# enabling passwordless sudo or generating self-signed ssl certs, when testing
# locally, in Vagrant. But not in production!
env: production

# This var is referenced by a few other vars, eg. git_repo, hostname, site_fqdn.
project_name: new-people

# This is what you'll see at the bash prompt if/when you ssh into your server.
hostname: "{{project_name}}"

# This is the fully qualified domain name of your production server. Because
# nginx checks this value against the URL being requested, it must be the same
# as the server's DNS name. This value is overridden for Vagrant and staging
# servers.
site_fqdn: "{{project_name}}.bocoup.com"

##############
# PROVISIONING
##############

# Keys to be added to apt.
apt_keys:
  - "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"

# Ppas to be added to apt. Useful ppas (replace trusty with your Ubuntu
# version codename, if necessary):
# Git latest:     ppa:git-core/ppa
# Node.js 0.10.x: deb https://deb.nodesource.com/node_0.10 trusty main
# Node.js 0.12.x: deb https://deb.nodesource.com/node_0.12 trusty main
# Io.js 1.x:      deb https://deb.nodesource.com/iojs_1.x trusty main
apt_ppas:
  - "deb https://deb.nodesource.com/node_4.x trusty main"
  - "ppa:git-core/ppa"

# Any apt packages to install. Apt package versions may be specified like
# - git=2.1.0
apt_packages:
  - nginx
  - git
  - nodejs
  - build-essential
  - g++

# Any npm global modules to install. Npm module versions may be specified like
# - {name: bower, version: 1.2.3}
npm_global_modules: []

############
# WEB SERVER
############

# Should the nginx server use HTTPS instead of HTTP?
ssl: true

# If ssl is enabled, these cert/key files will be used by nginx. You will need
# to ensure these files are valid and already on the server (which you can do
# via cloud-init, scp, etc).
ssl_cert_path: /etc/ssl/star.bocoup.com.cert
ssl_key_path: /etc/ssl/star.bocoup.com.key

# Use a custom parameter for stronger DHE key exchange.
dhe_param_path: /etc/ssl/certs/dhparam.pem

# The directory that nginx will serve as the production site. This is typically
# where your index.html file exists (or will exist after the build process).
public_path: "{{site_path}}/public"

# Nginx dir and conf dir.
nginx_dir: /etc/nginx
conf_dir: "{{nginx_dir}}/conf.d"

# Nginx templated configuration files to create.
shared:
  - {file: ssl_params, directory: "{{nginx_dir}}"}
  - {file: gzip_params, directory: "{{nginx_dir}}"}
confs:
  - {file: site.conf, directory: "{{conf_dir}}"}

#######
# USERS
#######

# Specified users will be added to the remote server, along with all specified
# public keys. Removing a user from this list does NOT remove them from the
# remote server! You need to set their state to "absent", remove all the other
# properties for that user, and re-run the "configure" playbook. Also, the
# shadow password (that user's sudo password) should be a hash, and NOT plain
# text!
#
# Generate a shadow password hash using the following command:
# openssl passwd -1 -salt $(openssl rand -base64 6) yourpassword
#
# ===================== VERY IMPORTANT NOTE, PLEASE READ =====================
# When creating a new project using this workflow, REPLACE THE DEFAULT USERS
# WITH YOUR OWN USERS. If you leave the default users, we'll all have access to
# your servers, which is something we really don't want.
# ============================================================================
#
# If you have no users to define here, set users to an empty array, like:
# users: []
users:
	- name: leobalter
    state: present
    real_name: Leonardo Balter
    shadow_pass: $1$0j0ZOVa8$3HQfh1UwfS/mq3JTqeKmi1
    public_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDK2DhxqTS+g/hzAgaRRAvBv7Jg5FfLTDxAXYVfYhVtikU8W7zo36oPDyTlCUIa5tmO0c7Nyz4XvNoGna2Ie6tNnOEAAI8o01Mw41GzI7fARZPAOKns2j3nnOOm0Ij3aRINynAkAyzugeoQ2X9DSHuGq8A4P2ygOxjHoew4WBHYd5Le+d+3i5oH9+j4Kx1HotRQJcdls/sRB7HdFj6DvfTAHkXlF2Ayxch1wDRrqL8h8Xcv708qrC/kLGhTozGQ3DAICaIEz7qldOzrBC/eJ1RNPcylbtzuDiu7DuxjZFYHVUN3Bije5O/KKPQI9PctJr+h3NcgIyez+tRvELvWmPWx leonardo.balter@gmail.com
  - name: tkellen
    state: present
    real_name: Tyler Kellen
    shadow_pass: $1$SLUJWFxu$Zrq6t39fbas7duavaPLKb.
    public_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDASWvJsFUg1ONxaV64PSaZg9dM5xhml+oeSfetRHMeO+JtzLodFgLu+wc5UED29xYf0I7/jDPaQQFu8gEs7x6A91unjR2mZzpx4du+NrNpwj+TGTNEdf6VmbneKu/RqCxTLXvkga4DJ4uXpUfL97u6sEMZDKr1uDYjH1CXR9yhGmRnsVw0UDIbOUD9rw5ociqMSwlW362XDNJh+yRSeG80cyAYDU0YXopMc8jIzoJ8j6qVdawvnBoVUswGvjRHQbTaKNqp+tyhGKFQGdPzoSubtJ8pt6g7tldkLuxphqQ5/m5q/rb74BU48laGvl5ssigEfY2tuqN9jG35zIVJxo3J tyler@sleekcode.net
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCUpQGw83rF9wV3/0H7TJAmADHJEFJcUhvveYhflvnvBY+aunLj2hYEwdtzI/Zf4sZgDn+IdEbk5QAdmxAURPrT0rTF3SFvs/86aLaBR/UZK3ABRqqGBhP6HqaEOwGv5AnHkByMd6KB9tzpFmpmI+tkSvw0flKIA38lNO2ULd0Y+MGFvAcJ5EvLfK0fiEXyj4dh9t2gsG4cL/QPa5IydTbCmhsJkzpFxMBnghNrvoqN7r1T14meFb/PWSC2LTTR5kh5F6y4GaDBljLkwReFHr2KhzNEG3EgexzhZtDxfWR5jMXZbkkyLJZLkz/BT4EFxQe3yl0Ps0oNgFGkXNkNrvyV tyler@sleekcode.net

########
# DEPLOY
########

# Parent directory for cloned repository directories. The clone_path and
# site_path should be children of this directory.
base_path: /mnt

# Temporary location where the Git repo will be cloned and the build scripts
# will be run before going live.
clone_path: "{{base_path}}/temp"

# Where the production site symlink will exist.
site_path: "{{base_path}}/site"

# If defined, only this many of the most recent clone directories (including the
# current specified commit) will be retained. Anything older will be removed,
# once the current clone has been made live.
keep_n_most_recent: 3

# If this variable is defined, a file containing build information, including
# the timestamp, commit, sha, and a few other useful values will be generated
# after the build has completed. This file is relative to your project root.
build_info_path: "public/assets/build.txt"

###################
# DEPLOY EXTRA VARS
###################

# Specify any valid remote (typically a github user)
remote: bocoup

# Specify any ref (eg. branch, tag, SHA) to be deployed. This ref must be
# pushed to the remote git_repo before it can be deployed.
commit: master

# Git repo address.
git_repo: git@github.com:{{remote}}/{{project_name}}.git

# Clone and build the specified commit SHA, regardless of prior build status.
force: false

# Use the local project Git repo instead of the remote git_repo. This option
# only works with the vagrant inventory, and not with staging or production.
local: false
